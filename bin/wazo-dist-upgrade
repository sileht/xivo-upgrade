#!/bin/bash
# Copyright 2017-2018 The Wazo Authors  (see the AUTHORS file)
# SPDX-License-Identifier: GPL-3.0+

LOGFILE="/var/log/xivo-upgrade.log"
export DEBIAN_FRONTEND=noninteractive
export APT_LISTCHANGES_FRONTEND=none

system_conf_failed=false

differed_action() {
    local state=$1
    echo "Executing $state upgrade action..."
    export XIVO_VERSION_INSTALLED=17.17
    shopt -qs nullglob  # avoid warning when action directory has no scripts
    for script in /usr/share/xivo-upgrade/$state.d/* ; do
        $script
    done
    shopt -qu nullglob
}

migrate_systemd_system_conf() {
    if [ ! -f /etc/systemd/system.conf.dpkg-old ] ; then
        return 0
    fi
    system_conf_diff="$(diff -u0 <(grep -v '^#' /etc/systemd/system.conf) <(grep -v '^#' /etc/systemd/system.conf.dpkg-old))"
    if [ $(echo "${system_conf_diff}" | wc -l) != 4 -o $(echo "${system_conf_diff}" | grep DefaultEnvironment | wc -l) != 1 ] ; then
        system_conf_failed=true
        return 1
    fi

    old_default_environment=$(grep ^DefaultEnvironment /etc/systemd/system.conf.dpkg-old)
    sed -i "s/^#DefaultEnvironment=.*/${old_default_environment}/" /etc/systemd/system.conf | grep DefaultEnv
    rm /etc/systemd/system.conf.dpkg-old
}

upgrade_dahdi_linux_modules(){
    kernel_release=$(ls /lib/modules/ | grep ^4.9)
    for kr in $kernel_release; do
        apt-get install dahdi-linux-modules-${kr}
    done
}

change_sources_list() {
    from=$1
    to=$2
    sed -i "s/$from/$to/" /etc/apt/sources.list
}

dist_upgrade() {
    differed_action pre-stop
    wazo-service stop
    wazo-service disable
    differed_action post-stop

    xivo-dist wazo-dev
    apt-get update -qq
    apt-get install --yes --force-yes -o Dpkg::Options::="--force-confnew" xivo-dist

    xivo-dist wazo-dev-stretch
    change_sources_list 'jessie' 'stretch'
    apt-get update -qq

    apt-get install --yes --force-yes -o Dpkg::Options::="--force-confnew" xivo-certs xivo-config
    systemctl restart consul
    apt-get upgrade --yes --force-yes -o Dpkg::Options::="--force-confnew"
    apt-get dist-upgrade --yes --force-yes -o Dpkg::Options::="--force-confnew"
    apt-get autoremove --yes

    migrate_systemd_system_conf
    upgrade_dahdi_linux_modules

    differed_action pre-start
    wazo-service enable
    wazo-service restart
    differed_action post-start
}

append_log()
{
    logfile=$1
    action=$2
    cat >> $logfile <<-EOF

	================================================
	wazo-dist-upgrade ${action} at $(date +%Y-%m-%d_%H:%M:%S)
	================================================

	EOF
}

usage() {
    cat <<-EOF
	usage: wazo-upgrade [-d] [-f] [-h]
	    -d: only download packages
	    -f: force yes
	    -h: print usage
	EOF
}

download_packages() {
    trap : SIGINT
    cp /etc/apt/sources.list.d/xivo-dist.list /tmp/xivo-dist.list.bak
    xivo-dist phoenix
    sed -i 's/phoenix/wazo-dev-stretch/' /etc/apt/sources.list.d/xivo-dist.list
    change_sources_list 'jessie' 'stretch'
    apt-get update -qq

    apt-get -y -d dist-upgrade

    change_sources_list 'stretch' 'jessie'
    mv /tmp/xivo-dist.list.bak /etc/apt/sources.list.d/xivo-dist.list
    apt-get update -qq
}

download_only=1
while getopts :dfh opt
do
    case ${opt} in
        d) download_only=0;;
        f) force=-f;;
        h)
            usage
            exit 0
        ;;
        '?')
            echo "${0} : option ${OPTARG} is not valid" >&2
            usage
            exit -1
        ;;
    esac
done

if [ $download_only -eq 0 ]; then
    append_log $LOGFILE started
    download_packages |& tee -a $LOGFILE
    append_log $LOGFILE stopped
else
    append_log $LOGFILE started
    set -o pipefail
    /usr/lib/xivo-upgrade/wazo-dist-upgrade-check $force |& tee -a $LOGFILE
    should_upgrade=$?
    set +o pipefail
    if [ ${should_upgrade} -eq 0 ] ; then
        dist_upgrade |& tee -a $LOGFILE
    fi
    append_log $LOGFILE stopped
fi
